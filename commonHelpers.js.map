{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst daysValue = document.querySelector('[data-days]');\nconst hoursValue = document.querySelector('[data-hours]');\nconst minutesValue = document.querySelector('[data-minutes]');\nconst secondsValue = document.querySelector('[data-seconds]');\nconst button = document.querySelector('button');\nconst selector = document.querySelector('#datetime-picker');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n\n    if (selectedDate < Date.now()) {\n      button.disabled = true;\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n    } else {\n      button.disabled = false;\n      userSelectedDate = selectedDate;\n    }\n  },\n};\n\nflatpickr(selector, options);\n\nlet userSelectedDate;\nlet intervalId;\n\nbutton.disabled = true;\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nbutton.addEventListener('click', () => {\n  button.disabled = true;\n  selector.disabled = true;\n\n  intervalId = setInterval(() => {\n    const remainingTime = userSelectedDate - Date.now();\n\n    if (remainingTime <= 0) {\n      clearInterval(intervalId);\n    } else {\n      const { days, hours, minutes, seconds } = convertMs(remainingTime);\n      daysValue.textContent = addLeadingZero(days);\n      hoursValue.textContent = addLeadingZero(hours);\n      minutesValue.textContent = addLeadingZero(minutes);\n      secondsValue.textContent = addLeadingZero(seconds);\n    }\n  }, 1000);\n});\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n"],"names":["daysValue","hoursValue","minutesValue","secondsValue","button","selector","options","selectedDates","selectedDate","iziToast","userSelectedDate","flatpickr","intervalId","convertMs","ms","days","hours","minutes","seconds","remainingTime","addLeadingZero","value"],"mappings":"+IAKA,MAAMA,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAW,SAAS,cAAc,kBAAkB,EAEpDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,GAE/BC,EAAe,KAAK,OACtBJ,EAAO,SAAW,GAClBK,EAAS,KAAK,CACZ,QAAS,qCACT,SAAU,UAClB,CAAO,IAEDL,EAAO,SAAW,GAClBM,EAAmBF,EAEtB,CACH,EAEAG,EAAUN,EAAUC,CAAO,EAE3B,IAAII,EACAE,EAEJR,EAAO,SAAW,GAElB,SAASS,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAd,EAAO,iBAAiB,QAAS,IAAM,CACrCA,EAAO,SAAW,GAClBC,EAAS,SAAW,GAEpBO,EAAa,YAAY,IAAM,CAC7B,MAAMO,EAAgBT,EAAmB,KAAK,IAAG,EAEjD,GAAIS,GAAiB,EACnB,cAAcP,CAAU,MACnB,CACL,KAAM,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUM,CAAa,EACjEnB,EAAU,YAAcoB,EAAeL,CAAI,EAC3Cd,EAAW,YAAcmB,EAAeJ,CAAK,EAC7Cd,EAAa,YAAckB,EAAeH,CAAO,EACjDd,EAAa,YAAciB,EAAeF,CAAO,CAClD,CACF,EAAE,GAAI,CACT,CAAC,EAED,SAASE,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC"}